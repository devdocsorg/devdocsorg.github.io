"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[31273],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89807:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={id:"useRadioGroup",title:"useRadioGroup"},i=void 0,l={unversionedId:"api-reference/antd/hooks/field/useRadioGroup",id:"version-3.xx.xx/api-reference/antd/hooks/field/useRadioGroup",title:"useRadioGroup",description:"useRadioGroup hook allows you to manage an Ant Design Radio.Group component when records in a resource needs to be used as radio options.",source:"@site/versioned_docs/version-3.xx.xx/api-reference/antd/hooks/field/useRadioGroup.md",sourceDirName:"api-reference/antd/hooks/field",slug:"/api-reference/antd/hooks/field/useRadioGroup",permalink:"/docs/3.xx.xx/api-reference/antd/hooks/field/useRadioGroup",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/versioned_docs/version-3.xx.xx/api-reference/antd/hooks/field/useRadioGroup.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{id:"useRadioGroup",title:"useRadioGroup"},sidebar:"someSidebar",previous:{title:"useCheckboxGroup",permalink:"/docs/3.xx.xx/api-reference/antd/hooks/field/useCheckboxGroup"},next:{title:"useSelect",permalink:"/docs/3.xx.xx/api-reference/antd/hooks/field/useSelect/"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"<code>resource</code>",id:"resource",level:3},{value:"<code>defaultValue</code>",id:"defaultvalue",level:3},{value:"<code>optionLabel</code> and <code>optionValue</code>",id:"optionlabel-and-optionvalue",level:3},{value:"<code>filters</code>",id:"filters",level:3},{value:"<code>sort</code>",id:"sort",level:3},{value:"<code>fetchSize</code>",id:"fetchsize",level:3},{value:"<code>queryOptions</code>",id:"queryoptions",level:3},{value:"<code>pagination</code>",id:"pagination",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties",level:3},{value:"Return values",id:"return-values",level:3},{value:"Example",id:"example",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},u=d("PropsTable"),c=d("CodeSandboxExample"),m={toc:p},g="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(g,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useRadioGroup")," hook allows you to manage an Ant Design ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/radio/#components-radio-demo-radiogroup-with-name"},"Radio.Group")," component when records in a resource needs to be used as radio options."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"We will demonstrate how to get data at ",(0,o.kt)("inlineCode",{parentName:"p"},"/languages")," endpoint from the ",(0,o.kt)("inlineCode",{parentName:"p"},"https://api.fake-rest.refine.dev")," REST API."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="https://api.fake-rest.refine.dev/languages"',title:'"https://api.fake-rest.refine.dev/languages"'},"{\n  ;[\n    {\n      id: 1,\n      title: 'Turkish',\n    },\n    {\n      id: 2,\n      title: 'English',\n    },\n    {\n      id: 3,\n      title: 'German',\n    },\n  ]\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/posts/create.tsx"',title:'"pages/posts/create.tsx"'},"import { Form, Radio, useRadioGroup } from '@pankod/refine-antd'\n\nexport const PostCreate = () => {\n  // highlight-start\n  const { radioGroupProps } = useRadioGroup<ILanguage>({\n    resource: 'languages',\n  })\n  // highlight-end\n\n  return (\n    <Form>\n      <Form.Item label=\"Languages\" name=\"languages\">\n        // highlight-next-line\n        <Radio.Group {...radioGroupProps} />\n      </Form.Item>\n    </Form>\n  )\n}\n\ninterface ILanguage {\n  id: number\n  title: string\n}\n")),(0,o.kt)("div",{class:"img-container"},(0,o.kt)("div",{class:"window"},(0,o.kt)("div",{class:"control red"}),(0,o.kt)("div",{class:"control orange"}),(0,o.kt)("div",{class:"control green"})),(0,o.kt)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/hooks/useRadioGroup/basic-usage.png",alt:"Radio group"})),(0,o.kt)("br",null),(0,o.kt)("p",null,"All we have to do is pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"radioGroupProps")," it returns to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Radio.Group>")," component."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useRadioGroup")," uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"useList")," hook for fetching data. ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/data/useList"},"Refer to Ant Design ",(0,o.kt)("inlineCode",{parentName:"a"},"useList")," hook for details. ","\u2192")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("h3",{id:"resource"},(0,o.kt)("inlineCode",{parentName:"h3"},"resource")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { radioGroupProps } = useRadioGroup({\n  resource: 'languages',\n})\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"resource")," property determines API resource endpoint to fetch records from ",(0,o.kt)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"dataProvider")),". It returns properly configured ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," values for radio buttons."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/radio"},"Refer to the Ant Design's ",(0,o.kt)("inlineCode",{parentName:"a"},"Radio.Group")," component documentation for detailed info on ",(0,o.kt)("inlineCode",{parentName:"a"},"options"),". ","\u2192")),(0,o.kt)("h3",{id:"defaultvalue"},(0,o.kt)("inlineCode",{parentName:"h3"},"defaultValue")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { selectProps } = useRadioGroup({\n  resource: 'languages',\n  // highlight-next-line\n  defaultValue: 1,\n})\n")),(0,o.kt)("p",null,"The easiest way to selecting a default value for an radio button field is by passing in ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultValue"),"."),(0,o.kt)("h3",{id:"optionlabel-and-optionvalue"},(0,o.kt)("inlineCode",{parentName:"h3"},"optionLabel")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"optionValue")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { radioGroupProps } = useRadioGroup({\n  resource: 'languages',\n  // highlight-start\n  optionLabel: 'title',\n  optionValue: 'id',\n  // highlight-end\n})\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"optionLabel")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"optionValue")," allows you to change the values and appearances of your options. Default values are ",(0,o.kt)("inlineCode",{parentName:"p"},'optionLabel = "title"')," and ",(0,o.kt)("inlineCode",{parentName:"p"},'optionValue = "id"'),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Supports use with ",(0,o.kt)("inlineCode",{parentName:"p"},"optionLabel")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"optionValue")," ",(0,o.kt)("a",{parentName:"p",href:"https://lodash.com/docs/4.17.15#get"},"Object path")," syntax."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { options } = useSelect({\n  resource: 'categories',\n  // highlight-start\n  optionLabel: 'nested.title',\n  optionValue: 'nested.id',\n  // highlight-end\n})\n"))),(0,o.kt)("h3",{id:"filters"},(0,o.kt)("inlineCode",{parentName:"h3"},"filters")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { radioGroupProps } = useRadioGroup({\n  resource: 'languages',\n  // highlight-start\n  filters: [\n    {\n      field: 'title',\n      operator: 'eq',\n      value: 'German',\n    },\n  ],\n  // highlight-end\n})\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"filters")," allows us to add filters while fetching the data. For example, if you want to list only the ",(0,o.kt)("inlineCode",{parentName:"p"},"titles")," that are equal to ",(0,o.kt)("inlineCode",{parentName:"p"},'"German"')," records."),(0,o.kt)("h3",{id:"sort"},(0,o.kt)("inlineCode",{parentName:"h3"},"sort")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { radioGroupProps } = useRadioGroup({\n  resource: 'languages',\n  // highlight-start\n  sort: [\n    {\n      field: 'title',\n      order: 'asc',\n    },\n  ],\n  // highlight-end\n})\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"sort")," allows us to sort the ",(0,o.kt)("inlineCode",{parentName:"p"},"options"),". For example, if you want to sort your list according to ",(0,o.kt)("inlineCode",{parentName:"p"},"title")," by ascending."),(0,o.kt)("h3",{id:"fetchsize"},(0,o.kt)("inlineCode",{parentName:"h3"},"fetchSize")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { selectProps } = useRadioGroup({\n  resource: 'languages',\n  // highlight-next-line\n  fetchSize: 20,\n})\n")),(0,o.kt)("p",null,"Amount of records to fetch in radio group buttons."),(0,o.kt)("h3",{id:"queryoptions"},(0,o.kt)("inlineCode",{parentName:"h3"},"queryOptions")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { radioGroupProps } = useRadioGroup({\n  resource: 'languages',\n  // highlight-start\n  queryOptions: {\n    onError: () => {\n      console.log('triggers when on query return Error')\n    },\n  },\n  // highlight-end\n})\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/reference/useQuery"},"useQuery")," options can be set by passing ",(0,o.kt)("inlineCode",{parentName:"p"},"queryOptions")," property."),(0,o.kt)("h3",{id:"pagination"},(0,o.kt)("inlineCode",{parentName:"h3"},"pagination")),(0,o.kt)("p",null,"Allows us to set page and items per page values."),(0,o.kt)("p",null,"For example imagine that we have 1000 post records:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const { selectProps } = useSelect({\n  resource: 'categories',\n  // highlight-next-line\n  pagination: { current: 3, pageSize: 8 },\n})\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Listing will start from page 3 showing 8 records.")),(0,o.kt)("h2",{id:"api-reference"},"API Reference"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)(u,{module:"@pankod/refine-antd/useRadioGroup",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"return-values"},"Return values"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"radioGroupProps"),(0,o.kt)("td",{parentName:"tr",align:null},"Ant design radio group props"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ant.design/components/radio/#RadioGroup"},(0,o.kt)("inlineCode",{parentName:"a"},"Radio Group")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"queryResult"),(0,o.kt)("td",{parentName:"tr",align:null},"Results of the query of a record"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://react-query.tanstack.com/reference/useQuery"},(0,o.kt)("inlineCode",{parentName:"a"},"QueryObserverResult<{ data: TData }>")))))),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(c,{path:"field-antd-use-radio-group",mdxType:"CodeSandboxExample"}))}h.isMDXComponent=!0}}]);