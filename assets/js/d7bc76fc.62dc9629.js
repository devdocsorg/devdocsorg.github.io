"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[89028,17870,55598,74036,41780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},21567:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"api-reference/core/hooks/useSelect/basic-usage-live-preview",id:"api-reference/core/hooks/useSelect/basic-usage-live-preview",title:"basic-usage-live-preview",description:"",source:"@site/docs/api-reference/core/hooks/useSelect/basic-usage-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/basic-usage-live-preview",permalink:"/docs/api-reference/core/hooks/useSelect/basic-usage-live-preview",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/api-reference/core/hooks/useSelect/basic-usage-live-preview.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{}},s={},p=[],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px",live:!0,url:"http://localhost:3000/products",previewHeight:"200px"},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@refinedev/core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const { options } = useSelect<ICategory>({\n        resource: "categories",\n    });\n\n    return (\n        <label>\n            Select a category:\n            <select>\n                {options?.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </label>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}u.isMDXComponent=!0},42562:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"api-reference/core/hooks/useSelect/default-value-live-preview",id:"api-reference/core/hooks/useSelect/default-value-live-preview",title:"default-value-live-preview",description:"",source:"@site/docs/api-reference/core/hooks/useSelect/default-value-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/default-value-live-preview",permalink:"/docs/api-reference/core/hooks/useSelect/default-value-live-preview",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/api-reference/core/hooks/useSelect/default-value-live-preview.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{}},s={},p=[],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"200px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@refinedev/core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const { options } = useSelect<ICategory>({\n        resource: "categories",\n        // highlight-next-line\n        defaultValue: 20,\n    });\n\n    return (\n        <label>\n            Select a category:\n            <select>\n                {options?.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.value}-{option.label}\n                    </option>\n                ))}\n            </select>\n        </label>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}u.isMDXComponent=!0},7703:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>y,frontMatter:()=>p,metadata:()=>c,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),o=n(21567),i=n(53212),l=n(50584),s=n(42562);const p={title:"useSelect",siderbar_label:"useSelect",source:"https://github.com/refinedev/refine/blob/next/packages/core/src/hooks/useSelect/index.ts"},d=void 0,c={unversionedId:"api-reference/core/hooks/useSelect/index",id:"api-reference/core/hooks/useSelect/index",title:"useSelect",description:"useSelect hook allows you to manage any select (like a Html `` tag, React Select, etc...) component. Since it is designed as headless, It expects you to handle the UI.",source:"@site/docs/api-reference/core/hooks/useSelect/index.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/",permalink:"/docs/api-reference/core/hooks/useSelect/",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/api-reference/core/hooks/useSelect/index.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{title:"useSelect",siderbar_label:"useSelect",source:"https://github.com/refinedev/refine/blob/next/packages/core/src/hooks/useSelect/index.ts"},sidebar:"someSidebar",previous:{title:"useUpdateMany",permalink:"/docs/api-reference/core/hooks/data/useUpdateMany/"},next:{title:"useForm",permalink:"/docs/api-reference/core/hooks/useForm"}},u={},m=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Realtime Updates",id:"realtime-updates",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>resource</code> <PropTag required />",id:"resource-",level:3},{value:"<code>optionLabel</code> and <code>optionValue</code>",id:"optionlabel-and-optionvalue",level:3},{value:"<code>sorters</code>",id:"sorters",level:3},{value:"<code>filters</code>",id:"filters",level:3},{value:"<code>defaultValue</code>",id:"defaultvalue",level:3},{value:"<code>debounce</code>",id:"debounce",level:3},{value:"<code>queryOptions</code>",id:"queryoptions",level:3},{value:"<code>pagination</code>",id:"pagination",level:3},{value:"<code>current</code>",id:"current",level:4},{value:"<code>pageSize</code>",id:"pagesize",level:4},{value:"<code>mode</code>",id:"mode",level:4},{value:"<code>defaultValueQueryOptions</code>",id:"defaultvaluequeryoptions",level:3},{value:"<code>onSearch</code>",id:"onsearch",level:3},{value:"<code>meta</code>",id:"meta",level:3},{value:"<code>dataProviderName</code>",id:"dataprovidername",level:3},{value:"<code>successNotification</code>",id:"successnotification",level:3},{value:"<code>errorNotification</code>",id:"errornotification",level:3},{value:"<code>liveMode</code>",id:"livemode",level:3},{value:"<code>onLiveEvent</code>",id:"onliveevent",level:3},{value:"<code>liveParams</code>",id:"liveparams",level:3},{value:"<del><code>sort</code></del>",id:"sort",level:3},{value:"<del><code>hasPagination</code></del>",id:"haspagination",level:3},{value:"FAQ",id:"faq",level:2},{value:"How to get all the data without pagination?",id:"how-to-get-all-the-data-without-pagination",level:3},{value:"How to add search to options (Autocomplete)?",id:"how-to-add-search-to-options-autocomplete",level:3},{value:"How to ensure <code>defaultValue</code> is included in the options?",id:"how-to-ensure-defaultvalue-is-included-in-the-options",level:3},{value:"How to change the <code>label</code> and <code>value</code> properties in options?",id:"how-to-change-the-label-and-value-properties-in-options",level:3},{value:"Can I create the options manually?",id:"can-i-create-the-options-manually",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3},{value:"Type Parameters",id:"type-parameters",level:3},{value:"Return values",id:"return-values",level:3},{value:"Example",id:"example",level:2}],h=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},k=h("PropTag"),f=h("PropsTable"),v=h("CodeSandboxExample"),N={toc:m},g="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useSelect")," hook allows you to manage any ",(0,r.kt)("inlineCode",{parentName:"p"},"select")," (like a ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3schools.com/tags/tag_select.asp"},"Html ",(0,r.kt)("inlineCode",{parentName:"a"},"<select>")," tag"),", ",(0,r.kt)("a",{parentName:"p",href:"https://react-select.com/home"},"React Select"),", etc...) component. Since it is designed as headless, It expects you to handle the UI."),(0,r.kt)("p",null,"This hook uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"useList")," hook for fetching data. ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/data/useList/"},"Refer to useList hook for details. \u2192")),(0,r.kt)("admonition",{title:"DERIVATIVES",type:"info-tip"},(0,r.kt)("p",{parentName:"admonition"},"If you're looking for a complete select library, refine has out-of-the-box support for the libraries below:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ant.design/components/select"},"Ant Design Select")," (for Ant Design users) - ",(0,r.kt)("a",{parentName:"li",href:"/docs/api-reference/antd/hooks/field/useSelect"},"Documentation")," - ",(0,r.kt)("a",{parentName:"li",href:"/docs/examples/field/useSelect"},"Example")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://mui.com/material-ui/react-autocomplete"},"Material UI Autocomplete")," (for Material UI users) - ",(0,r.kt)("a",{parentName:"li",href:"/docs/api-reference/mui/hooks/useAutocomplete"},"Documentation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://mantine.dev/core/select/"},"Mantine Select")," (for Mantine users) - ",(0,r.kt)("a",{parentName:"li",href:"/docs/api-reference/mantine/hooks/useSelect"},"Documentation")))),(0,r.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.kt)("p",null,"Here is a basic example of how to use ",(0,r.kt)("inlineCode",{parentName:"p"},"useSelect")," hook."),(0,r.kt)(o.default,{mdxType:"BasicUsageLivePreview"}),(0,r.kt)("h2",{id:"realtime-updates"},"Realtime Updates"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This feature is only available if you use a ",(0,r.kt)("a",{parentName:"p",href:"docs/api-reference/core/providers/live-provider"},"Live Provider"))),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"useSelect")," hook is mounted, it will call the ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe")," method from the ",(0,r.kt)("inlineCode",{parentName:"p"},"liveProvider")," with some parameters such as ",(0,r.kt)("inlineCode",{parentName:"p"},"channel"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"resource")," etc. It is useful when you want to subscribe to the live updates."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/live-provider"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"liveProvider")," documentation for more information ","\u2192")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"resource-"},(0,r.kt)("inlineCode",{parentName:"h3"},"resource")," ",(0,r.kt)(k,{required:!0,mdxType:"PropTag"})),(0,r.kt)("p",null,"It will be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.kt)("inlineCode",{parentName:"p"},"useList")," hook. The parameter is usually used as an API endpoint path. It all depends on how to handle the ",(0,r.kt)("inlineCode",{parentName:"p"},"resource")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method. See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial/understanding-dataprovider/create-dataprovider/"},"creating a data provider")," section for an example of how resource are handled."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    resource: "categories",\n});\n')),(0,r.kt)("h3",{id:"optionlabel-and-optionvalue"},(0,r.kt)("inlineCode",{parentName:"h3"},"optionLabel")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"optionValue")),(0,r.kt)("p",null,"Allows you to change the ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"label")," of your options.",(0,r.kt)("br",{parentName:"p"}),"\n","Default values are ",(0,r.kt)("inlineCode",{parentName:"p"},'optionLabel = "title"')," and ",(0,r.kt)("inlineCode",{parentName:"p"},'optionValue = "id"')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect<ICategory>({\n    resource: "products",\n    optionLabel: "name"\n    optionValue: "productId"\n});\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Supports nested properties with option ",(0,r.kt)("a",{parentName:"p",href:"https://lodash.com/docs/4.17.15#get"},"Object path")," syntax."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const { options } = useSelect({\n    resource: "categories",\n    optionLabel: "nested.title",\n    optionValue: "nested.id",\n});\n'))),(0,r.kt)("h3",{id:"sorters"},(0,r.kt)("inlineCode",{parentName:"h3"},"sorters")),(0,r.kt)("p",null,"It allows to show the options in the desired order. ",(0,r.kt)("inlineCode",{parentName:"p"},"sorters")," will be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.kt)("inlineCode",{parentName:"p"},"useList")," hook. It is used to send sort query parameters to the API."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"docs/api-reference/core/interfaceReferences#crudsorting"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"CrudSorting")," interface for more information ","\u2192")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    sorters: [\n        {\n            field: "title",\n            order: "asc",\n        },\n    ],\n});\n')),(0,r.kt)(l.default,{mdxType:"SortLivePreview"}),(0,r.kt)("h3",{id:"filters"},(0,r.kt)("inlineCode",{parentName:"h3"},"filters")),(0,r.kt)("p",null,"It is used to show options by filtering them. ",(0,r.kt)("inlineCode",{parentName:"p"},"filters")," will be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.kt)("inlineCode",{parentName:"p"},"useList")," hook. It is used to send filter query parameters to the API."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/interfaceReferences#crudfilters"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"CrudFilters")," interface for more information ","\u2192")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    filter: [\n        {\n            field: "isActive",\n            operator: "eq",\n            value: true,\n        },\n    ],\n});\n')),(0,r.kt)("h3",{id:"defaultvalue"},(0,r.kt)("inlineCode",{parentName:"h3"},"defaultValue")),(0,r.kt)("p",null,"Allows to make options selected by default. Adds extra options to ",(0,r.kt)("inlineCode",{parentName:"p"},"<select>")," component. In some cases like there are many entries for the ",(0,r.kt)("inlineCode",{parentName:"p"},"<select>")," and pagination is required, ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultValue")," may not be present in the current visible options and this can break the ",(0,r.kt)("inlineCode",{parentName:"p"},"<select>")," component. To avoid such cases, A seperate ",(0,r.kt)("inlineCode",{parentName:"p"},"useMany")," query is sent to the backend with the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultValue")," and appended to the options of ",(0,r.kt)("inlineCode",{parentName:"p"},"<select>"),", ensuring the default values exist in the current options array. Since it uses ",(0,r.kt)("inlineCode",{parentName:"p"},"useMany")," to query the necessary data, the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultValue")," can be a single value or an array of values like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n    defaultValue: 1, // or [1, 2]\n});\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/data/useMany"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"useMany")," documentation for detailed usage. ","\u2192")),(0,r.kt)("h3",{id:"debounce"},(0,r.kt)("inlineCode",{parentName:"h3"},"debounce")),(0,r.kt)("p",null,"It allows us to ",(0,r.kt)("inlineCode",{parentName:"p"},"debounce")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"onSearch")," function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    resource: "categories",\n    debounce: 500,\n});\n')),(0,r.kt)("h3",{id:"queryoptions"},(0,r.kt)("inlineCode",{parentName:"h3"},"queryOptions")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"queryOptions")," is used to pass additional options to the ",(0,r.kt)("inlineCode",{parentName:"p"},"useQuery")," hook. It is useful when you want to pass additional options to the ",(0,r.kt)("inlineCode",{parentName:"p"},"useQuery")," hook."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://tanstack.com/query/v4/docs/react/reference/useQuery"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"useQuery")," documentation for more information ","\u2192")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n    queryOptions: {\n        retry: 3,\n    },\n});\n")),(0,r.kt)("h3",{id:"pagination"},(0,r.kt)("inlineCode",{parentName:"h3"},"pagination")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pagination")," will be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," as parameter. It is used to send pagination query parameters to the API."),(0,r.kt)("h4",{id:"current"},(0,r.kt)("inlineCode",{parentName:"h4"},"current")),(0,r.kt)("p",null,"You can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"current")," page number to the ",(0,r.kt)("inlineCode",{parentName:"p"},"pagination")," property."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n    pagination: {\n        current: 2,\n    },\n});\n")),(0,r.kt)("h4",{id:"pagesize"},(0,r.kt)("inlineCode",{parentName:"h4"},"pageSize")),(0,r.kt)("p",null,"You can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"pageSize")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"pagination")," property."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n    pagination: {\n        pageSize: 20,\n    },\n});\n")),(0,r.kt)("h4",{id:"mode"},(0,r.kt)("inlineCode",{parentName:"h4"},"mode")),(0,r.kt)("p",null,"It can be ",(0,r.kt)("inlineCode",{parentName:"p"},'"off"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"client"')," or ",(0,r.kt)("inlineCode",{parentName:"p"},'"server"'),". It is used to determine whether to use server-side pagination or not."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    pagination: {\n        mode: "off",\n    },\n});\n')),(0,r.kt)("h3",{id:"defaultvaluequeryoptions"},(0,r.kt)("inlineCode",{parentName:"h3"},"defaultValueQueryOptions")),(0,r.kt)("p",null,"When the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultValue")," property is given, the ",(0,r.kt)("inlineCode",{parentName:"p"},"useMany")," data hook is called for the selected records. With this property, you can change the options of this query. If not given, the values given in ",(0,r.kt)("inlineCode",{parentName:"p"},"queryOptions")," will be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const { options } = useSelect({\n    resource: "categories",\n    defaultValueQueryOptions: {\n        onSuccess: (data) => {\n            console.log("triggers when on query return on success");\n        },\n    },\n});\n')),(0,r.kt)("h3",{id:"onsearch"},(0,r.kt)("inlineCode",{parentName:"h3"},"onSearch")),(0,r.kt)("p",null,"It allows us to ",(0,r.kt)("inlineCode",{parentName:"p"},"AutoComplete")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/interfaceReferences#crudfilters"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"CrudFilters")," interface for more information ","\u2192")),(0,r.kt)(i.default,{mdxType:"OnSearchLivePreview"}),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The HTML select tag does not natively support AutoComplete. If AutoComplete is desired, it can be used with ",(0,r.kt)("a",{parentName:"p",href:"https://react-select.com/async"},"React Select")," or ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tannerlinsley/use-select"},"use-select"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If ",(0,r.kt)("inlineCode",{parentName:"p"},"onSearch")," is used, it will override the existing ",(0,r.kt)("inlineCode",{parentName:"p"},"filters"),".")),(0,r.kt)("h3",{id:"meta"},(0,r.kt)("inlineCode",{parentName:"h3"},"meta")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/general-concepts/#meta"},(0,r.kt)("inlineCode",{parentName:"a"},"meta"))," is used following two purposes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To pass additional information to data provider methods."),(0,r.kt)("li",{parentName:"ul"},"Generate GraphQL queries using plain JavaScript Objects (JSON). Please refer ",(0,r.kt)("a",{parentName:"li",href:"/docs/advanced-tutorials/data-provider/graphql/#edit-page"},"GraphQL")," for more information.")),(0,r.kt)("p",null,"In the following example, we pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," property in the ",(0,r.kt)("inlineCode",{parentName:"p"},"meta")," object to the ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method. With similar logic, you can pass any properties to specifically handle the data provider methods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    // highlight-start\n    meta: {\n        headers: { "x-meta-data": "true" },\n    },\n    // highlight-end\n});\n\nconst myDataProvider = {\n    //...\n    getList: async ({\n        resource,\n        pagination,\n        sorters,\n        filters,\n        // highlight-next-line\n        meta,\n    }) => {\n        // highlight-next-line\n        const headers = meta?.headers ?? {};\n        const url = `${apiUrl}/${resource}`;\n        //...\n        //...\n        // highlight-next-line\n        const { data, headers } = await httpClient.get(`${url}`, { headers });\n        return {\n            data,\n        };\n    },\n    //...\n};\n')),(0,r.kt)("h3",{id:"dataprovidername"},(0,r.kt)("inlineCode",{parentName:"h3"},"dataProviderName")),(0,r.kt)("p",null,"If there is more than one ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider"),", you can specify which one to use by passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProviderName")," prop. It is useful when you have a different data provider for different resources."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    dataProviderName: "second-data-provider",\n});\n')),(0,r.kt)("h3",{id:"successnotification"},(0,r.kt)("inlineCode",{parentName:"h3"},"successNotification")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/notification-provider/"},(0,r.kt)("inlineCode",{parentName:"a"},"NotificationProvider"))," is required for this prop to work.")),(0,r.kt)("p",null,"After data is fetched successfully, ",(0,r.kt)("inlineCode",{parentName:"p"},"useSelect")," can call ",(0,r.kt)("inlineCode",{parentName:"p"},"open")," function from ",(0,r.kt)("inlineCode",{parentName:"p"},"NotificationProvider")," to show a success notification. With this prop, you can customize the success notification."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    successNotification: (data, values, resource) => {\n        return {\n            message: `${data.title} Successfully fetched.`,\n            description: "Success with no errors",\n            type: "success",\n        };\n    },\n});\n')),(0,r.kt)("h3",{id:"errornotification"},(0,r.kt)("inlineCode",{parentName:"h3"},"errorNotification")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/notification-provider/"},(0,r.kt)("inlineCode",{parentName:"a"},"NotificationProvider"))," is required for this prop to work.")),(0,r.kt)("p",null,"After data fetching is failed, ",(0,r.kt)("inlineCode",{parentName:"p"},"useSelect")," will call ",(0,r.kt)("inlineCode",{parentName:"p"},"open")," function from ",(0,r.kt)("inlineCode",{parentName:"p"},"NotificationProvider")," to show a error notification. With this prop, you can customize the error notification."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    errorNotification: (data, values, resource) => {\n        return {\n            message: `Something went wrong when getting ${data.id}`,\n            description: "Error",\n            type: "error",\n        };\n    },\n});\n')),(0,r.kt)("h3",{id:"livemode"},(0,r.kt)("inlineCode",{parentName:"h3"},"liveMode")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/live-provider/"},(0,r.kt)("inlineCode",{parentName:"a"},"LiveProvider"))," is required for this prop to work.")),(0,r.kt)("p",null,'Determines whether to update data automatically ("auto") or not ("manual") if a related live event is received. It can be used to update and show data in Realtime throughout your app.\nFor more information about live mode, please check ',(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/live-provider/#livemode"},"Live / Realtime")," page."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    liveMode: "auto",\n});\n')),(0,r.kt)("h3",{id:"onliveevent"},(0,r.kt)("inlineCode",{parentName:"h3"},"onLiveEvent")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/live-provider/"},(0,r.kt)("inlineCode",{parentName:"a"},"LiveProvider"))," is required for this prop to work.")),(0,r.kt)("p",null,"The callback function that is executed when new events from a subscription are arrived."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n    onLiveEvent: (event) => {\n        console.log(event);\n    },\n});\n")),(0,r.kt)("h3",{id:"liveparams"},(0,r.kt)("inlineCode",{parentName:"h3"},"liveParams")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/live-provider/"},(0,r.kt)("inlineCode",{parentName:"a"},"LiveProvider"))," is required for this prop to work.")),(0,r.kt)("p",null,"Params to pass to liveProvider's ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/live-provider/#subscribe"},"subscribe")," method."),(0,r.kt)("h3",{id:"sort"},(0,r.kt)("del",{parentName:"h3"},(0,r.kt)("inlineCode",{parentName:"del"},"sort"))),(0,r.kt)("admonition",{title:"Deprecated",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"sorters")," instead.")),(0,r.kt)("h3",{id:"haspagination"},(0,r.kt)("del",{parentName:"h3"},(0,r.kt)("inlineCode",{parentName:"del"},"hasPagination"))),(0,r.kt)("admonition",{title:"Deprecated",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"pagination.mode")," instead.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"hasPagination")," will be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.kt)("inlineCode",{parentName:"p"},"useList")," hook. It is used to determine whether to use server-side pagination or not."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n    hasPagination: true,\n});\n")),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("h3",{id:"how-to-get-all-the-data-without-pagination"},"How to get all the data without pagination?"),(0,r.kt)("p",null,"You may want to get all the data without pagination. In this case you should use the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/useSelect/#haspagination"},(0,r.kt)("inlineCode",{parentName:"a"},"hasPagination"))," prop."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Don't forget to implement it in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/providers/data-provider/#getlist"},"data provider"),".")),(0,r.kt)("h3",{id:"how-to-add-search-to-options-autocomplete"},"How to add search to options (Autocomplete)?"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/useSelect/#onsearch"},(0,r.kt)("inlineCode",{parentName:"a"},"onSearch"))," is a function that is used to set the search value. It is useful when you want to search for a specific value. A simple example of this is shown below."),(0,r.kt)(i.default,{mdxType:"OnSearchLivePreview"}),(0,r.kt)("h3",{id:"how-to-ensure-defaultvalue-is-included-in-the-options"},"How to ensure ",(0,r.kt)("inlineCode",{parentName:"h3"},"defaultValue")," is included in the options?"),(0,r.kt)("p",null,"In some cases we only have ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", it may be necessary to show it selected in the selection box. This hook sends the request via ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/data/useMany/"},(0,r.kt)("inlineCode",{parentName:"a"},"useMany")),", gets the data and mark as seleted."),(0,r.kt)(s.default,{mdxType:"DefaultValueLivePreview"}),(0,r.kt)("h3",{id:"how-to-change-the-label-and-value-properties-in-options"},"How to change the ",(0,r.kt)("inlineCode",{parentName:"h3"},"label")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"value")," properties in options?"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/hooks/useSelect/#optionlabel-and-optionvalue"},(0,r.kt)("inlineCode",{parentName:"a"},"optionLabel")," and ",(0,r.kt)("inlineCode",{parentName:"a"},"optionValue"))," are used to change the value of your options.\nThe default values are ",(0,r.kt)("inlineCode",{parentName:"p"},'optionsLabel="title"')," and ",(0,r.kt)("inlineCode",{parentName:"p"},'optionsValue="id"'),"."),(0,r.kt)("p",null,"To change to ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"categoryId"),";"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n    optionLabel: "name",\n    optionValue: "categoryId",\n});\n')),(0,r.kt)("h3",{id:"can-i-create-the-options-manually"},"Can I create the options manually?"),(0,r.kt)("p",null,"Sometimes it may not be enough to create ",(0,r.kt)("inlineCode",{parentName:"p"},"optionLabel")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"optionValue")," options. In this case we create options with ",(0,r.kt)("inlineCode",{parentName:"p"},"queryResult"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const { queryResult } = useSelect({\n    resource: "categories",\n});\n\nconst options = queryResult.data?.data.map((item) => ({\n    label: item.name,\n    value: item.id,\n}));\n\nreturn (\n    <select>\n        {options?.map((option) => (\n            <option key={option.value} value={option.value}>\n                {option.label}\n            </option>\n        ))}\n    </select>\n);\n')),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("h3",{id:"properties-1"},"Properties"),(0,r.kt)(f,{module:"@refinedev/core/useSelect",mdxType:"PropsTable"}),(0,r.kt)("h3",{id:"type-parameters"},"Type Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Desription"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TQueryFnData"),(0,r.kt)("td",{parentName:"tr",align:null},"Result data returned by the query function. Extends ",(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#baserecord"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseRecord"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#baserecord"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseRecord"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#baserecord"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseRecord")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TError"),(0,r.kt)("td",{parentName:"tr",align:null},"Custom error object that extends ",(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#httperror"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpError"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#httperror"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpError"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#httperror"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpError")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TData"),(0,r.kt)("td",{parentName:"tr",align:null},"Result data returned by the ",(0,r.kt)("inlineCode",{parentName:"td"},"select")," function. Extends ",(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#baserecord"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseRecord")),". If not specified, the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"TQueryFnData")," will be used as the default value."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api-reference/core/interfaceReferences#baserecord"},(0,r.kt)("inlineCode",{parentName:"a"},"BaseRecord"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TQueryFnData"))))),(0,r.kt)("h3",{id:"return-values"},"Return values"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},"It returns possible options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ label: string; value: string }"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"queryResult"),(0,r.kt)("td",{parentName:"tr",align:null},"Result of the query of a record"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://react-query.tanstack.com/reference/useQuery"},(0,r.kt)("inlineCode",{parentName:"a"},"QueryObserverResult<{ data: TData }>")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultValueQueryResult"),(0,r.kt)("td",{parentName:"tr",align:null},"Result of the query of a ",(0,r.kt)("inlineCode",{parentName:"td"},"defaultValue")," record"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://react-query.tanstack.com/reference/useQuery"},(0,r.kt)("inlineCode",{parentName:"a"},"QueryObserverResult<{ data: TData }>")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onSearch"),(0,r.kt)("td",{parentName:"tr",align:null},"A function to set the search value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSearch: (value: string) => void"))))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)(v,{path:"core-use-select",mdxType:"CodeSandboxExample"}))}y.isMDXComponent=!0},53212:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"api-reference/core/hooks/useSelect/on-search-live-preview",id:"api-reference/core/hooks/useSelect/on-search-live-preview",title:"on-search-live-preview",description:"",source:"@site/docs/api-reference/core/hooks/useSelect/on-search-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/on-search-live-preview",permalink:"/docs/api-reference/core/hooks/useSelect/on-search-live-preview",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/api-reference/core/hooks/useSelect/on-search-live-preview.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{}},s={},p=[],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"200px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@refinedev/core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const { options, onSearch } = useSelect<ICategory>({\n        resource: "categories",\n        // highlight-start\n        onSearch: (value) => [\n            {\n                field: "title",\n                operator: "contains",\n                value,\n            },\n        ],\n        // highlight-end\n    });\n\n    return (\n        <>\n            <p>\n                Filter:\n                <input onChange={(e) => onSearch(e.target.value)} />\n            </p>\n\n            <select>\n                {options?.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}u.isMDXComponent=!0},50584:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"api-reference/core/hooks/useSelect/sort-live-preview",id:"api-reference/core/hooks/useSelect/sort-live-preview",title:"sort-live-preview",description:"",source:"@site/docs/api-reference/core/hooks/useSelect/sort-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/sort-live-preview",permalink:"/docs/api-reference/core/hooks/useSelect/sort-live-preview",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/api-reference/core/hooks/useSelect/sort-live-preview.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{}},s={},p=[],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"200px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@refinedev/core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const [order, setOrder] = React.useState<"asc" | "desc">("asc");\n    const { options } = useSelect<ICategory>({\n        resource: "categories",\n        // highlight-start\n        sorters: [\n            {\n                field: "title",\n                order,\n            },\n        ],\n        // highlight-end\n    });\n\n    return (\n        <>\n            <label>\n                Select a category:\n                <select>\n                    {options?.map((option) => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n                </select>\n                <button\n                    onClick={() => setOrder(order === "asc" ? "desc" : "asc")}\n                >\n                    Toggle\n                </button>\n            </label>\n        </>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}u.isMDXComponent=!0}}]);