"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5335],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>v});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(t),g=o,v=l["".concat(c,".").concat(g)]||l[g]||d[g]||i;return t?r.createElement(v,a(a({ref:n},u),{},{components:t})):r.createElement(v,a({ref:n},u))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[l]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6933:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const i={},a=void 0,s={unversionedId:"api-reference/core/hooks/data/useList/pagination-live-preview",id:"version-3.xx.xx/api-reference/core/hooks/data/useList/pagination-live-preview",title:"pagination-live-preview",description:"",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/data/useList/pagination-live-preview.md",sourceDirName:"api-reference/core/hooks/data/useList",slug:"/api-reference/core/hooks/data/useList/pagination-live-preview",permalink:"/docs/3.xx.xx/api-reference/core/hooks/data/useList/pagination-live-preview",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/versioned_docs/version-3.xx.xx/api-reference/core/hooks/data/useList/pagination-live-preview.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{}},c={},p=[],u={toc:p},l="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:"live shared",live:!0,shared:!0},"body {\n  padding: 4px;\n  background: white;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=300px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"300px",hideCode:!0},"setInitialRoutes(['/products'])\n\n// visible-block-start\nimport { useState } from 'react'\nimport { useList, HttpError } from '@pankod/refine-core'\n\ninterface IProduct {\n  id: number\n  name: string\n  material: string\n}\n\nconst ProductList: React.FC = () => {\n  //highlight-start\n  const [current, setCurrent] = useState(1)\n  const [pageSize, setPageSize] = useState(5)\n  //highlight-end\n\n  const { data, isLoading, isError } = useList<IProduct, HttpError>({\n    resource: 'products',\n    //highlight-start\n    config: {\n      pagination: {\n        current,\n        pageSize,\n      },\n    },\n    //highlight-end\n  })\n\n  const products = data?.data ?? []\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  if (isError) {\n    return <div>Something went wrong!</div>\n  }\n\n  return (\n    <div>\n      {/* highlight-start */}\n      <button onClick={() => setCurrent((prev) => prev - 1)}>{'<'}</button>\n      <span> page: {current} </span>\n      <button onClick={() => setCurrent((prev) => prev + 1)}>{'>'}</button>\n      <span> per page: </span>\n      <select\n        value={pageSize}\n        onChange={(e) => setPageSize(Number(e.target.value))}\n      >\n        {[5, 10, 20].map((size) => (\n          <option key={size} value={size}>\n            {size}\n          </option>\n        ))}\n      </select>\n      {/* highlight-end */}\n\n      <ul>\n        {products.map((product) => (\n          <li key={product.id}>\n            <h4>\n              {product.name} - ({product.material})\n            </h4>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n// visible-block-end\n\nsetRefineProps({\n  resources: [\n    {\n      name: 'products',\n      list: ProductList,\n    },\n  ],\n})\n\nrender(<RefineHeadlessDemo />)\n")))}d.isMDXComponent=!0}}]);