"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9126],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=o.createContext({}),l=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(n),c=r,h=m["".concat(d,".").concat(c)]||m[c]||u[c]||a;return n?o.createElement(h,i(i({ref:t},s),{},{components:n})):o.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[m]="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},64505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={id:"add-edit-page",title:"2. Adding Edit Page",tutorial:{order:0,prev:"tutorial/adding-crud-pages/{preferredUI}/index",next:"tutorial/adding-crud-pages/{preferredUI}/add-show-page"}},i=void 0,p={unversionedId:"tutorial/adding-crud-pages/mui/add-edit-page",id:"tutorial/adding-crud-pages/mui/add-edit-page",title:"2. Adding Edit Page",description:"Edit page is the page where you can edit the record. In this tutorial, we will create the edit page for the blog_posts resource.",source:"@site/docs/tutorial/4-adding-crud-pages/mui/add-edit-page.md",sourceDirName:"tutorial/4-adding-crud-pages/mui",slug:"/tutorial/adding-crud-pages/mui/add-edit-page",permalink:"/docs/tutorial/adding-crud-pages/mui/add-edit-page",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/tutorial/4-adding-crud-pages/mui/add-edit-page.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{id:"add-edit-page",title:"2. Adding Edit Page",tutorial:{order:0,prev:"tutorial/adding-crud-pages/{preferredUI}/index",next:"tutorial/adding-crud-pages/{preferredUI}/add-show-page"}}},d={},l=[{value:"Creating Edit Page",id:"creating-edit-page",level:2},{value:"Understanding the Edit Component",id:"understanding-the-edit-component",level:2},{value:"Handling Relationships",id:"handling-relationships",level:3},{value:"Adding the Edit Page to the App",id:"adding-the-edit-page-to-the-app",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=s("Checklist"),u=s("ChecklistItem"),c={toc:l},h="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Edit page is the page where you can edit the record. In this tutorial, we will create the edit page for the ",(0,r.kt)("inlineCode",{parentName:"p"},"blog_posts")," resource."),(0,r.kt)("h2",{id:"creating-edit-page"},"Creating Edit Page"),(0,r.kt)("p",null,"First, let's create our file under the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/pages/blog-posts")," folder. We will name it ",(0,r.kt)("inlineCode",{parentName:"p"},"edit.tsx"),". Then, we will copy the edit page code generated by Inferencer and paste it into the file."),(0,r.kt)("p",null,"To copy the code and paste it into the file, follow the steps below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to the ",(0,r.kt)("a",{href:"http://localhost:3000/blog-posts",rel:"noopener noreferrer nofollow"},"localhost:3000/blog-posts")," in your browser.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'To open the edit page, click any "Edit" button in the "Actions" column of the table.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'On the edit page, click on the "Show Code" button in the bottom right corner of the page.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'You can see the edit page code generated by Inferencer. Click on the "Copy" button to copy the code.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Paste the code into the you created, ",(0,r.kt)("inlineCode",{parentName:"p"},"edit.tsx")," file."))),(0,r.kt)("p",null,"You can see the edit page code generated by Inferencer below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewOnly previewHeight=600px url=http://localhost:3000/blog-posts/edit/123",live:!0,previewOnly:!0,previewHeight:"600px",url:"http://localhost:3000/blog-posts/edit/123"},"setInitialRoutes(['/blog-posts/edit/123'])\n\nimport { CssBaseline, GlobalStyles, ThemeProvider } from '@mui/material'\nimport { Refine } from '@refinedev/core'\nimport { MuiInferencer } from '@refinedev/inferencer/mui'\nimport {\n  ErrorComponent,\n  ThemedLayout,\n  RefineThemes,\n  notificationProvider,\n  RefineSnackbarProvider,\n} from '@refinedev/mui'\nimport routerBindings, {\n  NavigateToResource,\n  UnsavedChangesNotifier,\n} from '@refinedev/react-router-v6'\nimport dataProvider from '@refinedev/simple-rest'\n\nimport { BrowserRouter, Outlet, Route, Routes } from 'react-router-dom'\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={RefineThemes.Blue}>\n      <CssBaseline />\n      <GlobalStyles styles={{ html: { WebkitFontSmoothing: 'auto' } }} />\n      <RefineSnackbarProvider>\n        <BrowserRouter>\n          <Refine\n            routerProvider={routerBindings}\n            dataProvider={dataProvider('https://api.fake-rest.refine.dev')}\n            notificationProvider={notificationProvider}\n            resources={[\n              {\n                name: 'blog_posts',\n                list: '/blog-posts',\n                show: '/blog-posts/show/:id',\n                create: '/blog-posts/create',\n                edit: '/blog-posts/edit/:id',\n              },\n            ]}\n            options={{\n              syncWithLocation: true,\n              warnWhenUnsavedChanges: true,\n            }}\n          >\n            <Routes>\n              <Route\n                element={\n                  <ThemedLayout>\n                    <Outlet />\n                  </ThemedLayout>\n                }\n              >\n                <Route\n                  index\n                  element={<NavigateToResource resource=\"blog_posts\" />}\n                />\n\n                <Route path=\"blog-posts\">\n                  <Route index element={<MuiInferencer />} />\n                  <Route path=\"show/:id\" element={<MuiInferencer />} />\n                  <Route path=\"edit/:id\" element={<MuiInferencer />} />\n                  <Route path=\"create\" element={<MuiInferencer />} />\n                </Route>\n\n                <Route path=\"*\" element={<ErrorComponent />} />\n              </Route>\n            </Routes>\n            <UnsavedChangesNotifier />\n          </Refine>\n        </BrowserRouter>\n      </RefineSnackbarProvider>\n    </ThemeProvider>\n  )\n}\n\nrender(<App />)\n")),(0,r.kt)("p",null,"Instead of coding the edit page component from scratch, Inferencer created the required code based on API response, so that we can customize."),(0,r.kt)("h2",{id:"understanding-the-edit-component"},"Understanding the Edit Component"),(0,r.kt)("p",null,"We will go through the edit page components and hooks one by one."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"<Edit/>")," is a ",(0,r.kt)("strong",{parentName:"p"},"refine")," component that is used to presentation purposes like showing the title of the page, save button, refresh button etc."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/mui/components/basic-views/edit"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"<Edit/>")," documentation for more information ","\u2192"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"useForm")," hook, imported from ",(0,r.kt)("inlineCode",{parentName:"p"},"@refinedev/react-hook-form")," package, has been developed by using the ",(0,r.kt)("strong",{parentName:"p"},"React Hook Form")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"useForm")," hook imported from ",(0,r.kt)("inlineCode",{parentName:"p"},"@refinedev/core")," package."),(0,r.kt)("p",{parentName:"li"},"It provides all the features of the ",(0,r.kt)("inlineCode",{parentName:"p"},"useForm")," hook from ",(0,r.kt)("inlineCode",{parentName:"p"},"@refinedev/core")," package as well as the ",(0,r.kt)("inlineCode",{parentName:"p"},"useForm")," hook from ",(0,r.kt)("strong",{parentName:"p"},"React Hook Form"),"."),(0,r.kt)("p",{parentName:"li"},"It also provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"saveButtonProps")," prop that we can pass to the submit button of the form."),(0,r.kt)("p",{parentName:"li"},"When you use ",(0,r.kt)("inlineCode",{parentName:"p"},"useForm")," in the edit page, it automatically fetches the data of the record by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," in the URL, then fills the form with the data. It sends the form data to ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," method when the form is submitted."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/docs/packages/documentation/react-hook-form/useForm/"},"Refer to the ",(0,r.kt)("strong",{parentName:"a"},"@refinedev/react-hook-form")," ",(0,r.kt)("inlineCode",{parentName:"a"},"useForm")," documentation for more information ","\u2192")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://react-hook-form.com/"},"Refer to the ",(0,r.kt)("strong",{parentName:"a"},"React Hook Form")," documentation for more information ","\u2192"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"All other components provided by ",(0,r.kt)("strong",{parentName:"p"},"Material UI")," are used to display the form fields."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://mui.com/"},"Refer to the ",(0,r.kt)("strong",{parentName:"a"},"Material UI")," documentation for more information ","\u2192")))),(0,r.kt)("h3",{id:"handling-relationships"},"Handling Relationships"),(0,r.kt)("p",null,"In the edit page, we may need to select a record from another resource. For example, we may need to select a category from the ",(0,r.kt)("inlineCode",{parentName:"p"},"categories")," resource to assign the blog post to the category. In this case, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutocomplete")," hook provided by ",(0,r.kt)("strong",{parentName:"p"},"refine"),". This hook fetches the data by passing the params to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataProvider"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"getList")," method. Then, it returns the necessary props for the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Autocomplete/>")," component."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/mui/hooks/useAutocomplete/"},"Refer to the ",(0,r.kt)("inlineCode",{parentName:"a"},"useAutocomplete")," documentation for more information ","\u2192")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/react-autocomplete/"},"Refer to the ",(0,r.kt)("strong",{parentName:"a"},"Material UI")," ",(0,r.kt)("inlineCode",{parentName:"a"},"<Autocomplete/>")," documentation for more information ","\u2192")),(0,r.kt)("p",null,"In the auto-generated edit page code, Inferencer used the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutocomplete")," hook to select a category from the ",(0,r.kt)("inlineCode",{parentName:"p"},"categories")," resource like below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n  resource: 'categories',\n})\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useAutocomplete")," returns 10 record by default, but the category of the blog post may not be in the first 10 records. To solve this problem, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultValue")," prop to set the default value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutocomplete")," hook like below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n  resource: 'categories',\n  defaultValue: blogPostsData?.category?.id,\n})\n")),(0,r.kt)("h2",{id:"adding-the-edit-page-to-the-app"},"Adding the Edit Page to the App"),(0,r.kt)("p",null,"Now that we have created the edit page, we need to add it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"App.tsx")," file."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"src/App.tsx")," file on your editor.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Import the created ",(0,r.kt)("inlineCode",{parentName:"p"},"BlogPostEdit")," component.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"MuiInferencer")," component with the ",(0,r.kt)("inlineCode",{parentName:"p"},"BlogPostEdit")," component."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},"import { CssBaseline, GlobalStyles, ThemeProvider } from '@mui/material'\nimport { Refine } from '@refinedev/core'\nimport { MuiInferencer } from '@refinedev/inferencer/mui'\nimport {\n  ErrorComponent,\n  ThemedLayout,\n  RefineThemes,\n  notificationProvider,\n  RefineSnackbarProvider,\n} from '@refinedev/mui'\nimport routerBindings, {\n  NavigateToResource,\n  // highlight-next-line\n  UnsavedChangesNotifier,\n} from '@refinedev/react-router-v6'\nimport dataProvider from '@refinedev/simple-rest'\nimport { BrowserRouter, Outlet, Route, Routes } from 'react-router-dom'\n\nimport { BlogPostList } from 'pages/blog-posts/list'\n//highlight-next-line\nimport { BlogPostEdit } from 'pages/blog-posts/edit'\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={RefineThemes.Blue}>\n      <CssBaseline />\n      <GlobalStyles styles={{ html: { WebkitFontSmoothing: 'auto' } }} />\n      <RefineSnackbarProvider>\n        <BrowserRouter>\n          <Refine\n            routerProvider={routerBindings}\n            dataProvider={dataProvider('https://api.fake-rest.refine.dev')}\n            notificationProvider={notificationProvider}\n            resources={[\n              {\n                name: 'blog_posts',\n                list: '/blog-posts',\n                show: '/blog-posts/show/:id',\n                create: '/blog-posts/create',\n                // highlight-next-line\n                edit: '/blog-posts/edit/:id',\n              },\n            ]}\n            // highlight-start\n            options={{\n              syncWithLocation: true,\n              warnWhenUnsavedChanges: true,\n            }}\n            // highlight-end\n          >\n            <Routes>\n              <Route\n                element={\n                  <ThemedLayout>\n                    <Outlet />\n                  </ThemedLayout>\n                }\n              >\n                <Route\n                  index\n                  element={<NavigateToResource resource=\"blog_posts\" />}\n                />\n\n                <Route path=\"blog-posts\">\n                  <Route index element={<BlogPostList />} />\n                  <Route path=\"show/:id\" element={<MuiInferencer />} />\n                  {/* highlight-start */}\n                  <Route path=\"edit/:id\" element={<BlogPostEdit />} />\n                  {/* highlight-end */}\n                  <Route path=\"create\" element={<MuiInferencer />} />\n                </Route>\n\n                <Route path=\"*\" element={<ErrorComponent />} />\n              </Route>\n            </Routes>\n\n            {/* highlight-next-line */}\n            <UnsavedChangesNotifier />\n          </Refine>\n        </BrowserRouter>\n      </RefineSnackbarProvider>\n    </ThemeProvider>\n  )\n}\nexport default App\n")),(0,r.kt)("p",null,"Now, we can see the edit page in the browser at ",(0,r.kt)("a",{href:"http://localhost:3000/blog-posts/edit/123",rel:"noopener noreferrer nofollow"},"localhost:3000/blog-posts/edit/123")),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)(m,{mdxType:"Checklist"},(0,r.kt)(u,{id:"add-edit-page-mui",mdxType:"ChecklistItem"},"I added the edit page to the app."),(0,r.kt)(u,{id:"add-edit-page-mui-2",mdxType:"ChecklistItem"},"I understood the edit page components and hooks."),(0,r.kt)(u,{id:"add-edit-page-mui-3",mdxType:"ChecklistItem"},"I understood the relationship handling.")))}g.isMDXComponent=!0}}]);