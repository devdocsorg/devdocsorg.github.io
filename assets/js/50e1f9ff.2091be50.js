"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[57490],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>f});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),d=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=d(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},v=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(r),v=o,f=u["".concat(c,".").concat(v)]||u[v]||l[v]||a;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=v;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=r[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}v.displayName="MDXCreateElement"},67425:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var t=r(87462),o=(r(67294),r(3905));const a={},i=void 0,s={unversionedId:"api-reference/core/hooks/data/useMany/basic-usage-live-preview",id:"version-3.xx.xx/api-reference/core/hooks/data/useMany/basic-usage-live-preview",title:"basic-usage-live-preview",description:"",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/data/useMany/basic-usage-live-preview.md",sourceDirName:"api-reference/core/hooks/data/useMany",slug:"/api-reference/core/hooks/data/useMany/basic-usage-live-preview",permalink:"/docs/3.xx.xx/api-reference/core/hooks/data/useMany/basic-usage-live-preview",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/versioned_docs/version-3.xx.xx/api-reference/core/hooks/data/useMany/basic-usage-live-preview.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{}},c={},d=[],p={toc:d},u="wrapper";function l(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:"live shared",live:!0,shared:!0},"body {\n  padding: 4px;\n  background: white;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=300px",live:!0,url:"http://localhost:3000/products",previewHeight:"300px"},"setInitialRoutes(['/products'])\n// visible-block-start\nimport { useState } from 'react'\nimport { useMany, HttpError } from '@pankod/refine-core'\n\ninterface IProduct {\n  id: number\n  name: string\n  material: string\n}\n\nconst ProductList: React.FC = () => {\n  const [ids, setIds] = useState([1, 2, 3])\n\n  const { data, isLoading, isError } = useMany<IProduct, HttpError>({\n    resource: 'products',\n    ids,\n  })\n\n  const products = data?.data ?? []\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  if (isError) {\n    return <div>Something went wrong!</div>\n  }\n\n  return (\n    <div>\n      {products.map((product) => (\n        <ul key={product.id}>\n          <li key={product.id}>\n            {product.id} - {product.name}{' '}\n            <button\n              onClick={() =>\n                setIds((prev) => prev.filter((id) => id !== product.id))\n              }\n            >\n              remove\n            </button>\n          </li>\n        </ul>\n      ))}\n\n      <button\n        onClick={() => {\n          setIds((prev) => [...prev, Math.floor(Math.random() * 1000) + 1])\n        }}\n      >\n        Add new product\n      </button>\n    </div>\n  )\n}\n\n// visible-block-end\nsetRefineProps({\n  resources: [\n    {\n      name: 'products',\n      list: ProductList,\n    },\n  ],\n})\nrender(<RefineHeadlessDemo />)\n")))}l.isMDXComponent=!0}}]);