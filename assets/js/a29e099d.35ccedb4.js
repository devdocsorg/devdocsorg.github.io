"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[32818],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));n(39960);const o={id:"json-schema-intro",title:"Introduction to JSON Schema",sidebar_label:"\ud83c\udfc6 JSON Schema"},i=void 0,s={unversionedId:"json-schema-intro",id:"json-schema-intro",title:"Introduction to JSON Schema",description:"What is JSON Schema?",source:"@site/jsonschema/index.mdx",sourceDirName:".",slug:"/",permalink:"/jsonschema/",draft:!1,tags:[],version:"current",frontMatter:{id:"json-schema-intro",title:"Introduction to JSON Schema",sidebar_label:"\ud83c\udfc6 JSON Schema"},sidebar:"tutorialSidebar",next:{title:"\ud83d\udca1 Demos",permalink:"/jsonschema/demo"}},l={},c=[{value:"What is JSON Schema?",id:"what-is-json-schema",level:2},{value:"Benefits of Using JSON Schema",id:"benefits-of-using-json-schema",level:2},{value:"Demos and Playground",id:"demos-and-playground",level:2},{value:"Examples",id:"examples",level:2},{value:"Title and Description fields:",id:"title-and-description-fields",level:3},{value:"Examples Data:",id:"examples-data",level:3},{value:"Default Values:",id:"default-values",level:3},{value:"Property descriptions:",id:"property-descriptions",level:3},{value:"Enumerations",id:"enumerations",level:3},{value:"Format",id:"format",level:3},{value:"Reference to external documentation:",id:"reference-to-external-documentation",level:3}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"what-is-json-schema"},"What is JSON Schema?"),(0,r.kt)("p",null,"JSON Schema is a vocabulary that allows you to annotate and validate JSON documents. It defines the structure, data types, and constraints of JSON data, making it easier to ensure that JSON data conforms to a specific format."),(0,r.kt)("h2",{id:"benefits-of-using-json-schema"},"Benefits of Using JSON Schema"),(0,r.kt)("p",null,"JSON Schema has several benefits, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Provides a formal definition of your JSON data structure"),(0,r.kt)("li",{parentName:"ul"},"Enables data validation to ensure data consistency"),(0,r.kt)("li",{parentName:"ul"},"Supports the use of data types and constraints for validation"),(0,r.kt)("li",{parentName:"ul"},"Provides a clear documentation of JSON data structure")),(0,r.kt)("h2",{id:"demos-and-playground"},"Demos and Playground"),(0,r.kt)("p",null,"Check out some JSON Schema demos and playgrounds to get started!"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./demo"},"Demo")," | ",(0,r.kt)("a",{parentName:"p",href:"./playground"},"Playground")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"title-and-description-fields"},"Title and Description fields:"),(0,r.kt)("p",null,"To add ",(0,r.kt)("strong",{parentName:"p"},"titles")," and ",(0,r.kt)("strong",{parentName:"p"},"descriptions")," to the schema, you can modify the schema like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},' "$schema": "http://json-schema.org/draft-07/schema#",\n    "title": "Declaration Schema",\n    "description": "Schema for a declaration object containing header, content, and other properties",\n    "$ref": "#/definitions/Declaration",\n    ...\n')),(0,r.kt)("h3",{id:"examples-data"},"Examples Data:"),(0,r.kt)("p",null,"To add examples to the schema, you can modify the schema like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ...\n    "properties": {\n        "base64Logo": {\n            "type": "string",\n            "example": "iVBORw0KGg...",\n            "description": "Base64-encoded logo image"\n        },\n        ...\n')),(0,r.kt)("h3",{id:"default-values"},"Default Values:"),(0,r.kt)("p",null,"To add default values to the scheme, you can modify the schema like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ...\n    "properties": {\n        "requiredMessage": {\n            "type": "string",\n            "default": "This declaration is required",\n            "description": "Message to display when declaration is required"\n        },\n        ...\n')),(0,r.kt)("h3",{id:"property-descriptions"},"Property descriptions:"),(0,r.kt)("p",null,"To add descriptions to each property in the scheme, you can modify the schema like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ...\n    "properties": {\n        "base64Logo": {\n            "type": "string",\n            "description": "Base64-encoded logo image"\n        },\n        "timestampConfig": {\n            "$ref": "#/definitions/TimestampConfiguration",\n            "description": "Timestamp configuration object"\n        },\n        "header": {\n            "type": "string",\n            "description": "Header of the declaration"\n        },\n        ...\n')),(0,r.kt)("h3",{id:"enumerations"},"Enumerations"),(0,r.kt)("p",null,"To add enumerations to the schema, you can modify the schema like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ...\n    "properties": {\n        "preferences": {\n            "type": "array",\n            "items": {\n                "type": "object",\n                "properties": {\n                    "id": {\n                        "type": "string",\n                        "enum": ["preference1", "preference2", "preference3"],\n                        "description": "ID of the preference"\n        ...\n')),(0,r.kt)("h3",{id:"format"},"Format"),(0,r.kt)("p",null,"To add format to the schema, you can modify the schema like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ...\n    "properties": {\n        "signature": {\n            "type": "string",\n            "format": "base64",\n            "description": "Base64-encoded signature image"\n        },\n        ...\n        }\n        ...\n')),(0,r.kt)("h3",{id:"reference-to-external-documentation"},"Reference to external documentation:"),(0,r.kt)("p",null,"To add a reference to external documentation, you can use the ",(0,r.kt)("strong",{parentName:"p"},"\u201c$ref\u201d")," field to link to external documentation, like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ...\n    "properties": {\n        "signatureOptions": {\n            "$ref": "#/definitions/SignatureOptions",\n            "description": "Options for the signature"\n        },\n        ...\n    },\n    ...\n')),(0,r.kt)("p",null,"In this case, the \u201c$ref\u201d field is used to link to the signatureOptions definition in the schema itself, but it can also be used to link to external documentation, such as docs.link.com."),(0,r.kt)("p",null,"By using these fields and best practices, the schema can be made more informative and easier to understand, making it easier for developers to use it and ensuring that the JSON data conforms to the expected format."))}u.isMDXComponent=!0}}]);