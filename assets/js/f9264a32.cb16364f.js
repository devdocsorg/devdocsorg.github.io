"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[13040],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),p=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),m=o,f=c["".concat(d,".").concat(m)]||c[m]||l[m]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},28735:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={id:"nestjsxCrud",title:"Nestjsx Crud","example-tags":["antd","data-provider","nestJsx-crud"]},s=void 0,i={unversionedId:"examples/data-provider/nestjsxCrud",id:"examples/data-provider/nestjsxCrud",title:"Nestjsx Crud",description:"refine Nestjsx Crud Data Provider allows you to use your data on the frontend by connecting to your Nestjsx API. With refine, it perform these operations for you without having to write extra code for queries. By examining this example, you can learn how to use the Nestjsx Crud Data Provider.",source:"@site/docs/examples/data-provider/nestjsxCrud.md",sourceDirName:"examples/data-provider",slug:"/examples/data-provider/nestjsxCrud",permalink:"/docs/examples/data-provider/nestjsxCrud",draft:!1,editUrl:"https://github.com/devdocsorg/devdocs/tree/master/docs/examples/data-provider/nestjsxCrud.md",tags:[],version:"current",lastUpdatedBy:"ashishdevdocs",lastUpdatedAt:1684241945,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{id:"nestjsxCrud",title:"Nestjsx Crud","example-tags":["antd","data-provider","nestJsx-crud"]},sidebar:"someSidebar",previous:{title:"Multiple Providers",permalink:"/docs/examples/data-provider/multiple"},next:{title:"Nhost",permalink:"/docs/examples/data-provider/nhost"}},d={},p=[],u=(c="CodeSandboxExample",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var c;const l={toc:p},m="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"refine")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nestjsx/crud"},"Nestjsx Crud")," Data Provider allows you to use your data on the frontend by connecting to your Nestjsx API. With ",(0,o.kt)("strong",{parentName:"p"},"refine"),", it perform these operations for you without having to write extra code for queries. By examining this example, you can learn how to use the Nestjsx Crud Data Provider."),(0,o.kt)(u,{path:"data-provider-nestjsx-crud",mdxType:"CodeSandboxExample"}))}f.isMDXComponent=!0}}]);